{"remainingRequest":"D:\\MyProject\\client\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\MyProject\\client\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\MyProject\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\MyProject\\client\\src\\views\\Home.vue?vue&type=template&id=fae5bece&scoped=true&","dependencies":[{"path":"D:\\MyProject\\client\\src\\views\\Home.vue","mtime":1605615684487},{"path":"D:\\MyProject\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\MyProject\\client\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\MyProject\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\MyProject\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}